select(country, lifeExp) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, avg(gdpPercap)) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, count(gdpPercap)) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, count(gdpPercap)) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, gdpPercap) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, gdpPercap) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp))
gapminder %>%
select(country, lifeExp, gdpPercap) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp), Average_pay = mean(gdpPercap))
max(year)
max(year, country)
max(year, country)
plot(lifeExp ~ log(gdpPercap))
library(dplyr)
gapminder %>%
select(country, lifeExp, gdpPercap) %>%
filter(country == "Croatia" | country == "Serbia") %>%
group_by(country) %>%
summarise(Average_life = mean(lifeExp), Average_pay = mean(gdpPercap))
knitr::opts_chunk$set(echo = TRUE)
clear
cls
knitr::opts_chunk$set(echo = TRUE)
library(help = "datasets")
library("datasets")
summary(datasets)
irisdata = iris
head(irisdata)
knitr::include_graphics("iris-machinelearning.png")
knitr::include_graphics("iris_petal-sepal-width-length.png")
dim(irisdata)
nrow(irisdata)
ncol(irisdata)
names(irisdata)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
head(read.csv("billionaires.csv", header=TRUE, sep = ","))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
bill = read.csv("./billionaires.csv", header = true)
TRUE
yum provides whois
R.home()
knitr::opts_chunk$set(echo = TRUE)
getwd()
billionaires <- read.csv("billionaires.csv", header = TRUE, sep = ",")
billionaires <- read.csv("billionaires.csv", header = TRUE, sep = ",")
getwd()
getwd()
setwd("Documents/FER/Nastava/SAP/Projekt")
getwd()
bill = read.csv("billionaires.csv", header = TRUE, sep = ",")
head(bill)
View(bill)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
getwd()
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
head(billionaires)
billionaires
View(billionaires)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(dplyr)
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
billionaires
library(dplyr)
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
billionaires
View(bill)
View(bill)
delete(bill)
delete.response(bill)
clear
View(bill)
library(dplyr)
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
head(billionaires)
library(dplyr)
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
head(billionaires)
plot(pressure)
plot(pressure)
plot(pressure)
```{r pressure, echo=FALSE}
plot(pressure)
dim(billionaires)
head(billionaires)
library(dplyr)
billionaires = read.csv("billionaires.csv", header = TRUE, sep = ",")
dim(billionaires)
head(billionaires)
dim(billionaires)
head(billionaires)
attach(billionaires)
mean(wealth.worth.in.billions)
boxplot(wealth.worth.in.billions ~ location.region)
plot(wealth.worth.in.billions ~ location.region)
boxplot
boxplot(wealth.worth.in.billions ~ location.region)
hist(wealth.worth.in.billions ~ location.region)
hist(wealth.worth.in.billions)
hist(wealth.worth.in.billions,20)
hist(wealth.worth.in.billions,50)
hist(demographics.age,50)
hist(demographics.age)
hist(demographics.age,20)
hist(demographics.age,50)
hist(demographics.age,50, x > 0)
hist(demographics.age > 0,50)
age = billionaires %>%
select(demographics.age)
age = billionaires %>%
select(demographics.age) %>%
filter(demographics.age > 0)
hist(age)
age
hist(age)
hist.default(age)
demographics.age
age <- billionaires %>%
select(demographics.age) %>%
filter(demographics.age > 0)
demographics.age
age
age.flatten()
demographics.age
View(age)
demographics.age
hist.default(age)
age <- billionaires %>%
select(demographics.age, ) %>%
filter(demographics.age > 0)
hist.default(age$demographics.age)
age <- billionaires %>%
select(demographics.age, ) %>%
filter(demographics.age > 20)
hist.default(age$demographics.age)
hist.default(age$demographics.age, col = 'blue')
hist.default(age$demographics.age, col = 'blue', xlab = "age")
hist.default(age$demographics.age, col = 'blue', xlab = "Age")
hist.default(age$demographics.age, col = 'blue', xlab = "Age", labels = TRUE)
hist.default(age$demographics.age, col = 'blue', xlab = "Age", labels = TRUE, main = paste("Histogram of billionaires age"))
hist.default(age$demographics.age, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
hist.default(age$demographics.age, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
billionaires
max.col(year)
max(year)
billionaires %>%
select(name, year, company.name, wealth.worth.in.billions, location.region) %>%
group_by(name, company.name, max(year))
billionaires %>%
select(name, year, company.name, wealth.worth.in.billions, location.region) %>%
group_by(name, company.name)
View(age)
billionaires %>%
select(name, max(year), company.name, wealth.worth.in.billions, location.region) %>%
group_by(name, company.name)
billionaires %>%
select(name, year, company.name, wealth.worth.in.billions, location.region) %>%
group_by(name, company.name)
billionaires %>%
select(name, year, company.name, wealth.worth.in.billions, location.region) %>%
group_by(name, company.name, location.region)
billionaires %>%
select(name) %>%
group_by(name)
billionaires %>%
select(name) %>%
arrange(name)
billionaires %>%
select(name) %>%
arrange(name, group_by(name))
billionaires %>%
select(name) %>%
arrange(name, group_by(name, add=TRUE))
billionaires %>%
select(name) %>%
arrange(name, group_by(name))
billionaires %>%
select(name, year, wealth.worth.in.billions, location.region)
billionaires %>%
select(name, year, wealth.worth.in.billions, location.region) %>%
distinct(name)
billionaires %>%
select(name, year, wealth.worth.in.billions, location.region) %>%
distinct(name, year)
billionaires %>%
join(billionaires)
billionaires %>%
inner_join(billionaires, billionaires)
billionaires %>%
inner_join(billionaires, billionaires, suffix = c(".x", ".y"))
billionaires %>%
select(name, year)
billionaires %>%
select(name, count(year))
billionaires %>%
distinct(name, year)
billionaires %>%
distinct(name, year) %>%
select(name, year, wealth.worth.in.billions)
billionaires %>%
distinct(name, year) %>%
select(name, year)
names(fifa19)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
fifa19 = read.csv("datasets/players_19.csv")
dim(fifa19)
names(fifa19)
fifa19
View(fifa19)
fifa19 = select(fifa19, -c("player_url","long_name","real_face","player_tags","loaned_from","player_traits"))
dim(fifa19)
fifa19 = read.csv("datasets/players_19.csv")
dim(fifa19)
summary(fifa19)
summary(billionaires)
attach(billionaires)
mean(wealth.worth.in.billions)
age <- billionaires %>%
select(demographics.age) %>%
filter(demographics.age > 20)
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
sapply(fifa19, class)
hist(fifa19$weight_kg,main='Weight in kg histogram', xlab='Weight', ylab='Frequency')
hist(fifa19$height_cm,main='Height in cm histogram', xlab='Height', ylab='Frequency')
hist(fifa19$value_eur,main='Value in eur histogram',xlab='Value',ylab='Frequency', breaks=50)
hist(fifa19$wage_eur,main='Wage in eur histogram',xlab='Wage',ylab='Frequency', breaks=50)
hist(log(fifa19$value_eur),main='Value in eur histogram',xlab='Value',ylab='Frequency', breaks=50)
barplot(table(fifa19$nationality),las=2,cex.names=.5,main='Nationality of players')
print('Igračeva preferirana noga za udarce: ')
table(fifa19$preferred_foot)
barplot(table(fifa19$team_position),las=2,main='Player team position on the field')
table(fifa19$team_position)
croatian_players = fifa19[fifa19$nationality == "Croatia",]
spanish_players = fifa19[fifa19$nationality == "Spain",]
cat('Prosječna visina hrvatskih igrača iznosi ', mean(croatian_players$height_cm),'\n')
cat('Prosječna visina španjolskih igrača iznosi ', mean(spanish_players$height_cm), '\n')
boxplot(croatian_players$height_cm, spanish_players$height_cm,
names = c('Croatian player heights','Spanish player heights'),
main='Boxplot of croatian and spanish player heights')
hist(croatian_players$height_cm,
breaks=seq(min(croatian_players$height_cm)-1,max(croatian_players$height_cm)+1,3),
main='Histogram of heights of Croatian players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
qqnorm(croatian_players$height_cm, pch = 1, frame = FALSE,main='Croatian players')
qqline(croatian_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
hist(croatian_players$height_cm,
breaks=seq(min(croatian_players$height_cm)-1,max(croatian_players$height_cm)+1,3),
main='Histogram of heights of Croatian players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
Histogrami upućuju na normalnost podataka. Normalnost možemo još provjeriti i qqplot-ovima ili testom koji ispituje normalnost.
qqnorm(croatian_players$height_cm, pch = 1, frame = FALSE,main='Croatian players')
qqline(croatian_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
var(croatian_players$height_cm)
var(spanish_players$height_cm)
var.test(croatian_players$height_cm, spanish_players$height_cm)
# Bitan je poredak kojim funkciji 't.test()' prosljedjujemo uzorke!
t.test(croatian_players$height_cm, spanish_players$height_cm, alt = "greater", var.equal = TRUE)
Ako stavimo
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
fifa19 = read.csv("datasets/players_19.csv")
dim(fifa19)
names(fifa19)
View(fifa19)
fifa19 = select(fifa19, -c("player_url","long_name","real_face","player_tags","loaned_from","player_traits"))
dim(fifa19)
summary(fifa19)
sapply(fifa19, class)
for (col_name in names(fifa19)){
if (sum(is.na(fifa19[,col_name])) > 0){
cat('Ukupno nedostajućih vrijednosti za varijablu ',col_name, ': ', sum(is.na(fifa19[,col_name])),'\n')
}
}
cat('\n Dimenzija podataka: ', dim(fifa19))
fifa19 = select(fifa19, -c("nation_jersey_number"))
dim(fifa19)
hist(fifa19$weight_kg,main='Weight in kg histogram', xlab='Weight', ylab='Frequency')
hist(fifa19$height_cm,main='Height in cm histogram', xlab='Height', ylab='Frequency')
hist(fifa19$value_eur,main='Value in eur histogram',xlab='Value',ylab='Frequency', breaks=50)
hist(fifa19$wage_eur,main='Wage in eur histogram',xlab='Wage',ylab='Frequency', breaks=50)
hist(log(fifa19$value_eur),main='Value in eur histogram',xlab='Value',ylab='Frequency', breaks=50)
hist(log(fifa19$wage_eur),main='Wage in eur histogram',xlab='Wage',ylab='Frequency', breaks=20)
barplot(table(fifa19$nationality),las=2,cex.names=.5,main='Nationality of players')
print('Igračeva preferirana noga za udarce: ')
table(fifa19$preferred_foot)
barplot(table(fifa19$team_position),las=2,main='Player team position on the field')
table(fifa19$team_position)
croatian_players = fifa19[fifa19$nationality == "Croatia",]
spanish_players = fifa19[fifa19$nationality == "Spain",]
cat('Prosječna visina hrvatskih igrača iznosi ', mean(croatian_players$height_cm),'\n')
cat('Prosječna visina španjolskih igrača iznosi ', mean(spanish_players$height_cm), '\n')
boxplot(croatian_players$height_cm, spanish_players$height_cm,
names = c('Croatian player heights','Spanish player heights'),
main='Boxplot of croatian and spanish player heights')
hist(croatian_players$height_cm,
breaks=seq(min(croatian_players$height_cm)-1,max(croatian_players$height_cm)+1,3),
main='Histogram of heights of Croatian players',
xlab='Height in cm')
hist(spanish_players$height_cm,
breaks=seq(min(spanish_players$height_cm)-1.5,max(spanish_players$height_cm)+1.5,3),
main='Histogram of heights of Spanish players',
xlab='Height in cm')
qqnorm(croatian_players$height_cm, pch = 1, frame = FALSE,main='Croatian players')
qqline(croatian_players$height_cm, col = "steelblue", lwd = 2)
qqnorm(spanish_players$height_cm, pch = 1, frame = FALSE,main='Spanish players')
qqline(spanish_players$height_cm, col = "steelblue", lwd = 2)
var(croatian_players$height_cm)
var(spanish_players$height_cm)
var.test(croatian_players$height_cm, spanish_players$height_cm)
# Bitan je poredak kojim funkciji 't.test()' prosljedjujemo uzorke!
t.test(croatian_players$height_cm, spanish_players$height_cm, alt = "greater", var.equal = TRUE)
fifa20 = read.csv("datasets/players_20.csv")
dim(fifa20)
names(fifa20)
merged_df = merge(fifa19, fifa20, by="sofifa_id", suffixes = c(".19",".20"))
country = 'Spain'
len = length(merged_df[merged_df$nationality.19 == country,]$overall.19 -  merged_df[merged_df$nationality.19 == country,]$overall.20)
hist(merged_df[merged_df$nationality.19 == country,]$overall.19,
main=paste('Histogram of players from ',country,' in 2019 (',len,' players)'),
xlab='Overall score')
hist(merged_df[merged_df$nationality.19 == country,]$overall.20,
main=paste('Histogram of players from ',country,' in 2020 (',len,' players)'),
xlab='Overall score')
hist(merged_df[merged_df$nationality.19 == country,]$overall.19 -
merged_df[merged_df$nationality.19 == country,]$overall.20,
main=paste('Histogram of players from ',country,' in 2019 - 2020 (',len,' players)'),
xlab='Difference of overall score')
qqnorm(merged_df[merged_df$nationality.19 == country,]$overall.19 - merged_df[merged_df$nationality.19 == country,]$overall.20,
pch = 1,
frame = FALSE,
main=paste('QQ-plot for overall score of players from',country,' (',len,'players)'))
qqline(merged_df[merged_df$nationality.19 == country,]$overall.19 - merged_df[merged_df$nationality.19 == country,]$overall.20,
col = "steelblue", lwd = 2)
billionaires %>%
distinct(name, location.region)
bill_location <- billionaires %>%
distinct(name, location.region)
bill_location
bill_location <- billionaires %>%
distinct(name, location.region) %>%
count(location.region)
bill_location
bill_location <- billionaires %>%
distinct(name, location.region) %>%
filter(location.region != "0") %>%
count(location.region)
bill_location
hist(bill_location)
bill_location
boxplot(bill_location)
boxplot(bill_location$location.region)
boxplot(bill_location$n)
boxplot(bill_location$n ~ bill_location$location.region)
hist(bill_location$n ~ bill_location$location.region)
hist(bill_location$n)
hist(bill_location$n, 20)
hist(bill_location$n)
View(bill_location)
croatian_players = fifa19[fifa19$nationality == "Croatia",]
spanish_players = fifa19[fifa19$nationality == "Spain",]
croatian_players
billionaires %>%
distinct(name, location.region, year) %>%
filter(location.region != "0") %>%
count(location.region)
billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
bill_location <- billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
hist.default(bill_location, labels = TRUE)
hist.default(bill_location$n, labels = TRUE)
plot(bill_location$n)
plot(bill_location$n, bill_location$location.region)
hist.default(bill_location$n, labels = TRUE)
plot(bill_location$n)
barplot(bill_location$n)
barplot.default(bill_location$n, names.arg = bill_location$location.region)
barplot(table(fifa19$team_position),las=2,main='Player team position on the field')
barplot(table(fifa19$nationality),las=2,cex.names=.5,main='Nationality of players')
barplot.default(bill_location$n, names.arg = bill_location$location.region, width = .5)
barplot.default(bill_location$n, names.arg = bill_location$location.region, width = .1)
barplot.default(bill_location$n, names.arg = bill_location$location.region, width = .001)
barplot.default(bill_location$n, names.arg = bill_location$location.region, width = 0.001)
barplot(table(bill_location$n))
barplot(table(bill_location$location.region), )
barplot(table(bill_location$location.region), las=2)
barplot(table(bill_location$location.region), las=2, cex.names = 0.5)
```{r fig.width = 14, fig.height=5}
bill_location <- billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
barplot(bill_location$n)
barplot.default(bill_location$n, names.arg = bill_location$location.region,)
barplot(table(bill_location$location.region), las=2, cex.names = 0.5)
barplot(bill_location$n)
barplot.default(bill_location$n, names.arg = bill_location$location.region,)
```{r fig.width = 20, fig.height=5}
bill_location <- billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
barplot.default(bill_location$n, names.arg = bill_location$location.region,)
bill_location <- billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
barplot.default(bill_location$n, names.arg = bill_location$location.region,)
bill_location <- billionaires %>%
distinct(name, location.region, company.name) %>%
filter(location.region != "0") %>%
count(location.region)
barplot.default(bill_location$n, names.arg = bill_location$location.region,)
age <- billionaires[age>0]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
hist.default(age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
age
age = billionaires[age>0]
age
age = billionaires[!(billionaires$demographics.age<=0)]
age
billionaires1
billionaires1=billionaires[!(billionaires$demographics.age<=0),]
billionaires1
age = billionaires[!(billionaires$demographics.age<=0),]
age
age = billionaires[!(billionaires$demographics.age<=0)]
age = billionaires[!(billionaires$demographics.age<=0)]
age = billionaires[!(billionaires$demographics.age<=0),]
age
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
mean(wealth.worth.in.billions)
age = billionaires[!(billionaires$demographics.age<=0),]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
age = billionaires[(billionaires$demographics.age>0),]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
age = billionaires[(billionaires$demographics.age<0),]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
age = billionaires[(billionaires$demographics.age>20),]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
age = billionaires[(billionaires$demographics.age>=20),]
hist.default(age$demographics.age, 50, col = 'blue', xlab = "Age", main = paste("Histogram of billionaires age"))
barplot(table(billionaires$company.sector),las=2,cex.names=.5,main='The sector of the business')
table(billionaires$company.sector)
table(billionaires$company.sector > 20)
table(billionaires$company.sector > 50)
table(billionaires$company.sector > 50)
barplot(table(billionaires$company.sector),las=2,cex.names=.5,main='The sector of the business')
table(billionaires$company.sector > 50)
table(billionaires$company.sector > 100)
barplot(table(billionaires$company.sector),las=2,cex.names=.5,main='The sector of the business')
table(billionaires$company.sector)
